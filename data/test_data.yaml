%YAML:1.0
---

# NEW rev2 map structures
structA1:
   a: 1
   b: string1
   c: 10.2
   d: [1,2,3,4,5]

structA2:
   a: string1
   b: 5
   c: 98.2
   d: [1,2,3,4,9,2]
   e: [1,2,3,4,9,2]

structB:
   a: 10
   b: 12.1
   c: 104
   d: 12.3
   e: string

#  note that the parser wont allow numeric nodes in nested maps, 
# the node names must be prefixed with non-numeric e.g. _0. Parser can strip this automatically, default delimiter is "_" when ouputting to matlab
structnumbered:
   _0: string
   _1: 1
   _2: 3.3
   _3: 4
   _4: 5
   _5: [1,2,3]


# matrices and sorted matrices 
matA0: !!opencv-matrix
   rows: 6
   cols: 12
   dt: d
   data: [ 22, 960., 168., 0., 960., 168., 0., 960., 166., 0., 962., 162.,
       0., 966., 156., 0., 968., 154., 0., 964., 160., 0., 960., 168.,
       0., 956., 174., 0., 954., 176., 0., 956., 172., 0., 960., 166.,
       0., 964., 162., 0., 964., 162., 0., 962., 166., 0., 960., 170.,
       0., 958., 172., 0., 958., 172., 0., 958., 170., 0., 960., 166.,
       0., 960., 166., 0., 960., 168., 0., 960., 168., 0., 960., 170. ]
matA1: !!opencv-matrix
   rows: 6
   cols: 12
   dt: f
   data: [ 12, 960., 168., 0., 960., 168., 0., 960., 166., 0., 962., 162.,
       0., 966., 156., 0., 968., 154., 0., 964., 160., 0., 960., 168.,
       0., 956., 174., 0., 954., 176., 0., 956., 172., 0., 960., 166.,
       0., 964., 162., 0., 964., 162., 0., 962., 166., 0., 960., 170.,
       0., 958., 172., 0., 958., 172., 0., 958., 170., 0., 960., 166.,
       0., 960., 166., 0., 960., 168., 0., 960., 168., 0., 960., 170. ]
matA2: !!opencv-matrix
   rows: 6
   cols: 12
   dt: f
   data: [ 88, 960., 168., 0., 960., 168., 0., 960., 166., 0., 962., 162.,
       0., 966., 156., 0., 968., 154., 0., 964., 160., 0., 960., 168.,
       0., 956., 174., 0., 954., 176., 0., 956., 172., 0., 960., 166.,
       0., 964., 162., 0., 964., 162., 0., 962., 166., 0., 960., 170.,
       0., 958., 172., 0., 958., 172., 0., 958., 170., 0., 960., 166.,
       0., 960., 166., 0., 960., 168., 0., 960., 168., 0., 960., 170. ]
matA5: !!opencv-matrix
   rows: 6
   cols: 12
   dt: f
   data: [ 50, 960., 168., 0., 960., 168., 0., 960., 166., 0., 962., 162.,
       0., 966., 156., 0., 968., 154., 0., 964., 160., 0., 960., 168.,
       0., 956., 174., 0., 954., 176., 0., 956., 172., 0., 960., 166.,
       0., 964., 162., 0., 964., 162., 0., 962., 166., 0., 960., 170.,
       0., 958., 172., 0., 958., 172., 0., 958., 170., 0., 960., 166.,
       0., 960., 166., 0., 960., 168., 0., 960., 168., 0., 960., 170. ]
matB1: !!opencv-matrix
   rows: 5
   cols: 12
   dt: f
   data: [ 10, 10, 960., 168., 0., 960., 168., 0., 960., 168., 0., 960.,
       960., 168., 0., 960., 168., 0., 960., 168., 0., 960., 168., 0.,
       960., 168., 0., 960., 168., 0., 960., 168., 0., 960., 168., 0.,
       960., 168., 0., 960., 168., 0., 960., 168., 0., 960., 168., 0.,
       960., 168., 0., 960., 168., 0., 960., 168., 0., 960., 168., 0. ]

#vector
vec1: [1.2, 1.3, 1.4]

vec2: [1.1, 1.3, 1.1]

# int
myint: 100

# float
myfloat: 100.5

# string
mystring: Brown Vox











